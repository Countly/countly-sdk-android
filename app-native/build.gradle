apply plugin: 'com.android.application'

// uncomment the following to use/test Countly automatic uploads plugin
// apply plugin: ly.count.android.plugins.UploadSymbolsPlugin

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "ly.count.android.demo.crash"
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // You can add Countly plugin tasks to release task like this
    /*
    afterEvaluate {
        assembleRelease.finalizedBy(uploadJavaSymbols)
    }
    */

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }
    //ndkVersion '21.0.6113669'

    // Use this if you are working with sdk-native subproject instead of maven library.
    // Change also the dependency config below.
    /*
    sourceSets {
        main {
            // let gradle pack the shared library into apk
            jniLibs.srcDirs = ['../sdk-native/libs']
        }
    }
    */

}

repositories {
    // needed for using sdk-native from countly maven repo
    mavenCentral()
    jcenter()
}

// sdk and sdk-native are pulled from submodules of the project. 
// If you are running app independently, you may pull their latest version from our maven repo using the commented lines.
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation project(':sdk')
    //implementation 'ly.count.android:sdk:20.11.9'
    implementation project(':sdk-native')
    //implementation 'ly.count.android:sdk-native:20.11.9'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.1'
        // classpath files('../upload-plugin/build/libs/upload-plugin.jar')
        classpath group: 'ly.count.android', 'name': 'sdk-plugin', 'version': '20.11.8'

    }
}

// the following closure is used to configure Countly plugin tasks
// uploadJavaSymbols: a gradle task for automatic uploading of mapping.txt file to the server
// uploadNativeSymbols: a gradle task for automatic uploading of breakpad symbols folder to the server

/*
countly {
    // required by both tasks
    server "https://try.count.ly"
    app_key "XXXXXX"  // same app_key used for SDK integration

    // optional properties for uploadJavaSymbols. Shown are the default values.

    // location of mapping.txt file relative to project build directory
    mappingFile "outputs/mapping/release/mapping.txt"

    // note that will be saved with the upload and can be checked in the UI
    noteJava "sdk-plugin automatic upload of mapping.txt"

    // optional properties for uploadNativeSymbols. Shown are the default values.

    // directory of .so files relative to project build directory.
    // you can check the tar.gz file created under intermediates/countly
    // BUILD_TYPE could be debug or release
    nativeObjectFilesDir "intermediates/merged_native_libs/BUILD_TYPE"

    // path for breakpad tool dump_syms executable
    dumpSymsPath "/usr/bin"

    // note that will be saved with the upload and can be checked in the UI
    noteNative "sdk-plugin automatic upload of breakpad symbols"
}
*/
