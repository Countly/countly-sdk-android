apply plugin: 'com.android.library'
apply plugin: "com.vanniktech.maven.publish" //for publishing

//Plugin for generating test coverage reports.
//This plugin required android build tools 3.6.4 and gradle 5.6.4
//They are generated by calling the following from the root folder:
// ./gradlew createDebugCoverageReport
//apply plugin: 'jacoco-android'

buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    //classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.14.2' //for publishing
  }
}

android {
  compileSdkVersion 30
  buildToolsVersion "30.0.3"

  defaultConfig {
    minSdkVersion 17
    targetSdkVersion 30
    versionCode 1
    versionName "21.11.0"

    testInstrumentationRunner 'ly.count.android.sdk.test.InstrumentationTestRunner'
    testHandleProfiling true
    testFunctionalTest true
  }
  buildTypes {
    debug {
      //should be set to 'true' for jacoco code coverage
      testCoverageEnabled = false
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    abortOnError false
  }

  // This enables long timeouts required on slow environments, e.g. Travis
  adbOptions {
    timeOutInMs 20 * 60 * 1000 // 20 minutes
    installOptions "-d", "-t"
  }
}

def mockitoVersion = "2.28.2"

dependencies {
  api fileTree(dir: 'libs', include: ['*.jar'])
  implementation 'androidx.annotation:annotation:1.2.0'

  androidTestImplementation 'androidx.test:runner:1.4.0'
  androidTestImplementation 'androidx.test:rules:1.4.0'
  androidTestImplementation 'androidx.test.ext:junit:1.1.3'
  androidTestImplementation 'junit:junit:4.13.2'

  androidTestImplementation "org.mockito:mockito-core:${mockitoVersion}"
  androidTestImplementation "org.mockito:mockito-android:${mockitoVersion}"
  //androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.9.0"
}
