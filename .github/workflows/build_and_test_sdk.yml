name: The Countly Android SDK Unit Test

env:
  EMULATOR_REPO: us-docker.pkg.dev/android-emulator-268719/images/28-playstore-x64:30.1.2
  JAVA_V: 11
  JAVA_DIST: corretto

permissions:
  checks: write
  pull-requests: write

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master
      - staging
jobs:
  setup:
    runs-on: ubuntu-latest
    name: Build and Test the SDK

    steps:
      - name: Install Docker to the Runner
        run: sudo apt-get install docker

      - name: Pull Emulator from the Repo
        run: docker pull ${{ env.EMULATOR_REPO }}
    
      - name: Checkout SDK code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_V }}
          distribution: ${{ env.JAVA_DIST }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Start ADB Server
        run: adb start-server

      - name: Run Android Emulator Container
        run: docker run -d -e "ADBKEY=$(cat ~/.android/adbkey)" --device /dev/kvm --publish 5555:5555/tcp ${{ env.EMULATOR_REPO }}
      
      - name: Connect to the Emulator
        run: adb connect localhost:5555

      - name: Set AAPT2 for android 35
        run: mkdir -p $GRADLE_USER_HOME/.gradle && touch $GRADLE_USER_HOME/.gradle/gradle.properties && echo "android.aapt2FromMavenOverride=/usr/local/lib/android/sdk/build-tools/35.0.0/aapt2" >> $GRADLE_USER_HOME/.gradle/gradle.properties
  
      - name: Build the SDK
        if: always()
        run: ./gradlew sdk:build

      - name: Run the Android Unit Tests
        if: always()
        run: ./gradlew sdk:connectedAndroidTest

      - name: Publish Test Results to PR
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "Unit Test Results :rocket:"
          comment_title: "Unit Test Results :rocket:"
          files: |
            sdk/build/outputs/androidTest-results/**/*.xml
